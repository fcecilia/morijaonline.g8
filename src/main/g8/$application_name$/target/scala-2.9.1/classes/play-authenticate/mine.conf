#####################################################################################
#
# My play-authenticate settings
#
#####################################################################################

play-authenticate {
    
    	# if this is set to true, accounts are automatically merged
	# (e.g. if a user is logged in and uses an authentication provider
	# which has already been registered to another user prior to logging out, those two users are merged
	# Handle setting this to true this with care
	# if set to false, your resolver must not return null for askMerge()
	# defaults to false
	accountAutoMerge=true
	
	# if this is set to true, accounts are automatically linked
	# (e.g. if a user is logged in and uses a different authentication provider
	# which has NOT yet been registered to another user, this newly used authentication
	# provider gets added to the current local user
	# Handle setting this to true with care
	# If set to false, your resolver must not return null for askLink()
	# defaults to false
	accountAutoLink=true
    
    
    # Settings for the password-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    password {
        mail {
            verificationLink {
                # Whether the verification link will be HTTPS
                secure=false
            }
            passwordResetLink {
                # Whether the password reset link will be HTTPS
                secure=false
            }
            from {
                # Mailing from address
                email="you@gmail.com"

                # Mailing name
                name=Play Authenticate
            }
        }
        # Whether to directly log in after the password reset (true)
        # or send the user to the login page (false)
        loginAfterPasswordReset=true
    }

    # Settings for the foursquare-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the Foursquare provider from conf/play.plugins
    foursquare {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }

        # Foursquare credentials
        # These are mandatory for using OAuth and need to be provided by you,
        # if you want to use foursquare as an authentication provider.
        # Get the credentials here: https://de.foursquare.com/oauth/
        # Remove leading '#' after entering
        # clientId=
        # clientSecret=
    }
    
    # Settings for the twitter-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the Twiitter provider from conf/play.plugins
    twitter {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }

        # Twitter credentials
        # These are mandatory for using OAuth and need to be provided by you,
        # if you want to use twitter as an authentication provider.
        # Get the credentials here: https://dev.twitter.com/docs/auth/oauth
        # Remove leading '#' after entering
        consumerKey=PCjGArxtMW5gJECCXgKN9g
        consumerSecret=sffBwvTW9buMzsmixASma6Dotqa68rifo5hXjW0iNE
        
    }

    # Settings for the facebook-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the facebook provider from conf/play.plugins
    facebook {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }


        scope=email read_stream
        # Facebook credentials
        # These are mandatory for using OAuth and need to be provided by you,
        # if you want to use facebook as an authentication provider.
        # Get them here: https://developers.facebook.com/apps
        # Remove leading '#' after entering
       	clientId=123656694444930
	clientSecret=e4537e11342aa772f9b36b05677a46ef
    }

    # Settings for the google-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the Google provider from conf/play.plugins
    google {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }

        # Google credentials
        # These are mandatory for using OAuth and need to be provided by you,
        # if you want to use Google as an authentication provider.
             scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/plus.me"
        # Get them here: https://code.google.com/apis/console
        # Remove leading '#' after entering
        clientId=853476532003.apps.googleusercontent.com
	clientSecret=VHqKo2Bn-XC62Fxbi1hJbRZx

    }

    # Settings for the OpenID-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the OpenID provider from conf/play.plugins
    openid {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }
    }
}
